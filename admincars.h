#ifndef ADMINCARS_H
#define ADMINCARS_H

#include <QDialog>
#include <QSqlDatabase>
#include <QDebug>
#include <QSqlQuery>
#include <QSqlTableModel>
#include <QString>

namespace Ui {
class adminCars;
}

/*!
 * \class adminCars
 * \brief Класс adminCars предоставляет интерфейс для административного управления автомобилями.
 *
 * Класс позволяет просматривать, добавлять, удалять и изменять информацию об автомобилях в базе данных.
 */
class adminCars : public QDialog
{
    Q_OBJECT

public:
    /*!
     * \brief Конструктор класса adminCars.
     * \param parent Указатель на родительский виджет.
     *
     * Конструктор инициализирует новый экземпляр диалога с заданным родительским виджетом.
     * Он устанавливает начальные параметры интерфейса и инициирует подключение к базе данных.
     */
    explicit adminCars(QWidget *parent = nullptr);

    /*!
     * \brief Деструктор класса adminCars.
     *
     * Освобождает все ресурсы, связанные с объектом, и удаляет динамически созданные элементы управления.
     */
    ~adminCars();

private slots:
    /*!
     * \brief Обрабатывает нажатие на кнопку "Выход".
     *
     * Закрывает диалоговое окно без сохранения изменений.
     */
    void on_pushButton_3_clicked();

    /*!
     * \brief Обрабатывает нажатие на кнопку для дополнительной информации.
     *
     * Открывает дополнительное диалоговое окно или панель для отображения расширенной информации о выбранном автомобиле.
     */
    void on_moreButton_clicked();

    /*!
     * \brief Обрабатывает нажатие на кнопку добавления нового автомобиля.
     *
     * Открывает форму для ввода данных о новом автомобиле для добавления в базу данных.
     */
    void on_pushButton_clicked();

    /*!
     * \brief Обрабатывает выбор строки в таблице автомобилей.
     * \param index Индекс выбранной строки в таблице.
     *
     * Активирует интерфейс или обеспечивает возможность редактирования информации для выбранного автомобиля.
     */
    void on_tableView_clicked(const QModelIndex &index);

    /*!
     * \brief Обрабатывает нажатие на кнопку удаления автомобиля.
     *
     * Удаляет выбранный автомобиль из базы данных после подтверждения действия пользователем.
     */
    void on_pushButton_2_clicked();

private:
    Ui::adminCars *ui; ///< Указатель на форму пользовательского интерфейса, созданную с помощью Qt Designer.
    QSqlDatabase db; ///< Экземпляр базы данных для выполнения запросов.
    QSqlQuery *query; ///< Указатель на объект запроса для взаимодействия с базой данных.
    QSqlTableModel *model; ///< Модель данных для таблицы автомобилей.
};

#endif // ADMINCARS_H
